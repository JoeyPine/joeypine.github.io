<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Song的博客</title>
    <link>https://joeypine.github.io/posts/</link>
    <description>Recent content in Posts on Song的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Mon, 13 Apr 2020 23:40:57 +0800</lastBuildDate>
    
	<atom:link href="https://joeypine.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Maven是如何进行包管理？</title>
      <link>https://joeypine.github.io/posts/maven%E6%98%AF%E5%A6%82%E4%BD%95%E8%BF%9B%E8%A1%8C%E5%8C%85%E7%AE%A1%E7%90%86/</link>
      <pubDate>Mon, 13 Apr 2020 23:40:57 +0800</pubDate>
      
      <guid>https://joeypine.github.io/posts/maven%E6%98%AF%E5%A6%82%E4%BD%95%E8%BF%9B%E8%A1%8C%E5%8C%85%E7%AE%A1%E7%90%86/</guid>
      <description>我们都知道Java的包管理Maven的包管理在Java的学习过程中是非常重要的，所以这篇博客来了解下包管理的原理，以及如何解决包冲突；
JVM工作原理 JVM的工作流程被设计的相当之简单：
 执行一个类的字节码文件 如果在执行过程中碰到新的类，就去加载它 重复执行以上两步  问题来了，JVM从哪里去找加载些类？ 首先要知道JVM执行是需要在类路径（Classpath）来找执行需要的类，为什么我们没有传，但是JVM可以找到这些类？ 答案：因为IDEA和Maven帮我们做了这些事；
在IDEA中随便运行一段测试代码，会发现终端第一行总会有一长串指令，将它们复制出来发现，是非常非常又臭又长的一串，这就是IDEA和Maven帮我们做的事情：
将执行的类以及依赖的类，以 -classpath或-cp 格式，偷偷的帮我们传了
正因为IDEA和Maven帮我们做了这些事，才让编译的过程变得如此简单，在IDEA和Maven诞生前，人们都是通过手动添加classpath来让JVM读懂读取到所需要的jar包，当依赖的包邮成百上千个，这个过程就会无比繁琐.
什么是包管理？ 以上我们知道，在运行Java时需要传入依赖的类的路径，假如使用使用一些第三方类，那JVM从哪里去找这些类？
Maven&amp;ndash;包管理 Maven的约定帮我们定义了JVM需要的这些第三方的类该从哪里去找； Java的包 Java的类其实是由全限定类名在JVM中执行，全限定类名即包名+类名这样的组合，确定了是类的唯一标识；
那么问题来了，如果引用了不同版本的同名类，会怎么样？ 这就会出现依赖地狱（Classpath hell），也就是我们所说的依赖冲突；
一般来说出现这样的报错就是出现了依赖冲突
 AbstractMethodError NoClassDefFoundError ClassNotFoundException LinkageError  Java是如何处理依赖冲突 Java对于依赖冲突的两个解决原则：
 最近的胜出 如果路径相同，谁靠前声明谁赢  什么是最近：
比如com.a.b.c-0.1 和 com.a.c-0.2 这两个依赖，0.2的版本要比0.1版本的路径更短，所以Java会保留0.2来隐藏0.1的classspath 不管是最新或谁先声明，它留下的不一定是我们需要的那个版本，这时候就需要我们去手动解决冲突；
解决依赖冲突 方案一：可以通过maven dependency：tree 或 IDEA右侧GUI来查看项目依赖 解决办法：
  在项目依赖pom.xml中直接依赖某个版本，在pom文件中加入该版本的依赖： （原因是利用Java冲突依赖原则，是该依赖离项目更近）
  在项目依赖pom.xml中排除不需要依赖的版本：使用exclusions标签来表示
  方案二：安装maven helper插件 在IDEA中安装maven helper插件，安装成功后重启IDEA后打开pom.xml，下方会显示 Dependency Analyzer 页面中会列出发生冲突的依赖， 找到不需要的版本，右键-exclusion，即可将此依赖排除，效果同上2</description>
    </item>
    
    <item>
      <title>如何用Hugo搭建个人博客</title>
      <link>https://joeypine.github.io/posts/%E5%A6%82%E4%BD%95%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Sat, 11 Apr 2020 22:16:11 +0800</pubDate>
      
      <guid>https://joeypine.github.io/posts/%E5%A6%82%E4%BD%95%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>我也是第一次成功使用Hugo搭建博客站并托管到Github，把完整使用Hugo搭建博客的过程分享一下。
了解一下Hugo：  Hugo，译为雨果，目前世界上最快的博客生成器，以Go语言实现的静态网站的生成器。
 Hugo（For Mac） 安装hugo，打开终端，输入：
brew install hugo  安装完成后，输入命令查看是否安装成功：
hugo version  使用Hugo生成站点  可以查看官方文档，☞官方教程 也可以看我的步骤。  1.找到一个目录，创建一个新的site，名为xxx.github.io-creator： hugo new site xxx.github.io-creator  xxx是你Github的名字，成功后会在当前目录下生成一个名为xxx.github.io-creator的目录
2.初始化site，并指定默认主题（可以改，首次最好使用默认主题） cd quickstart git init git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke 然后将主题添加到配置文件：
echo &#39;theme = &amp;quot;ananke&amp;quot;&#39; &amp;gt;&amp;gt; config.toml  3.添加内容 在posts目录下创建一个名为xxx的MarkDown文件
hugo new posts/xxx.md
文件里默认存在以下内容
--- title: &amp;quot;xxx&amp;quot; date: 2019-03-26T08:47:11+01:00 draft: true --- 添加自己的内容后，将draft修改为flase发布才能正常显示，draft是草稿
4.启动Hugo服务 hugo server -D
 | EN +------------------+----+ Pages | 10 Paginator pages | 0 Non-page files | 0 Static files | 3 Processed images | 0 Aliases | 1 Sitemaps | 1 Cleaned | 0 Total in 11 ms Watching for changes in /Users/bep/quickstart/{content,data,layouts,static,themes} Watching for config changes in /Users/bep/quickstart/config.</description>
    </item>
    
    <item>
      <title>开博大吉</title>
      <link>https://joeypine.github.io/posts/%E5%BC%80%E5%8D%9A%E5%A4%A7%E5%90%89/</link>
      <pubDate>Fri, 10 Apr 2020 23:39:15 +0800</pubDate>
      
      <guid>https://joeypine.github.io/posts/%E5%BC%80%E5%8D%9A%E5%A4%A7%E5%90%89/</guid>
      <description>大家好 这是我的第一篇博客，谢谢大家。</description>
    </item>
    
  </channel>
</rss>